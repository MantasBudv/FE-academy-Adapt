$sb-middle: #faf7ff;
$sb-inner : #90e7fe;
$sb-outer : #79e2fa;
$sb-inner-border : #baf3fe;
$sb-outer-border: #b7f3fe;

$color--black: #000;
$color--controls: #cb0047;

$goku-width : 10%;

$scene1-length: 5s;
$cubic: cubic-bezier(.05,1.34,.78,-0.35);

@import "mixins";
@import "animations";

@function randomNum($min, $max) {
    $rand: random();
    $randomNum: $min + floor($rand * (($max - $min) + 1));

    @return $randomNum;
}

// Controls

.input--play {

  &:checked {
    ~ .controls {
      label[for="play"] {
        &:before {
            // transform: translateX(-100%);
            // background: #cb0047;
            // animation: sceneProgress $scene1-length linear 1 forwards;
        }
      }
    }
  }
}

.input--reset {

  &:checked {
    ~ .controls {
      label[for="reset"] {
        &:before {
            // background: #cb0047;
        }
      }
    }
  }
}

.input--modal {

  &:checked {
    ~ .controls {
      label[for="modal"] {
        &:before {
            // background: black;
        }
      }
    }
  }
}

.controls {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  height: 40px;
  display: flex;
  justify-content: center;
  z-index: 100;
  border-bottom: 1px solid lighten(#3a3a3a, 15%);
  background-color: #3a3a3a;

  label {
    position: relative;
    cursor: pointer;
    flex-grow: 1;
    display: block;
    height: 40px;
    color: white;
    line-height: 40px;
    text-align: center;
    cursor: pointer;
    transition: background 0.2s ease-in-out;
    overflow: hidden;

    &:before {
      content: "";
      position: absolute;
      left: 0;
      right: 0;
      top: 0;
      bottom: 0;
      z-index: -1;
    }

    &:hover {
      background-color: transparentize(white, 0.9);
    }

    + label {
      border-left: 1px solid lighten(#3a3a3a, 15%);
    }
  }
}